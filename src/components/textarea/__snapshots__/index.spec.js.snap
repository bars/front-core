// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot: className css 1`] = `
".m-root {
  width: 100%;
  position: relative;
}
.m-textarea {
  font: inherit;
  width: 100%;
  resize: none;
  cursor: inherit;
  border: none;
  height: 100%;
  padding: 0;
  outline: none;
  box-sizing: border-box;
  background: transparent;
  line-height: inherit;
}
.m-shadow {
  resize: none;
  height: auto;
  overflow: hidden;
  position: absolute;
  visibility: hidden;
  white-space: pre-wrap;
}
.MuiInput-root {
  color: rgba(0, 0, 0, 0.87);
  display: inline-flex;
  position: relative;
  font-size: 1rem;
  font-family: \\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif;
  line-height: 1.1875em;
}
.MuiInput-root.MuiInput-disabled {
  color: rgba(0, 0, 0, 0.38);
}
label + .MuiInput-formControl {
  margin-top: 16px;
}
.MuiInput-underline:after {
  left: 0;
  right: 0;
  bottom: 0;
  content: \\"\\";
  position: absolute;
  transform: scaleX(0);
  transition: transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
  border-bottom: 2px solid #303f9f;
  pointer-events: none;
}
.MuiInput-underline.MuiInput-focused:after {
  transform: scaleX(1);
}
.MuiInput-underline.MuiInput-error:after {
  transform: scaleX(1);
  border-bottom-color: #f44336;
}
.MuiInput-underline:before {
  left: 0;
  right: 0;
  bottom: 0;
  content: \\"\\\\00a0\\";
  position: absolute;
  transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  border-bottom: 1px solid rgba(0, 0, 0, 0.42);
  pointer-events: none;
}
.MuiInput-underline:hover:not(.MuiInput-disabled):not(.MuiInput-focused):not(.MuiInput-error):before {
  border-bottom: 2px solid rgba(0, 0, 0, 0.87);
}
.MuiInput-underline.MuiInput-disabled:before {
  border-bottom: 1px dotted rgba(0, 0, 0, 0.42);
}
.MuiInput-multiline {
  padding: 6px 0 7px;
}
.MuiInput-fullWidth {
  width: 100%;
}
.MuiInput-input {
  font: inherit;
  color: currentColor;
  border: 0;
  margin: 0;
  padding: 6px 0 7px;
  display: block;
  min-width: 0;
  flex-grow: 1;
  box-sizing: content-box;
  background: none;
  vertical-align: middle;
  -webkit-tap-highlight-color: transparent;
}
.MuiInput-input::-webkit-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}
.MuiInput-input::-moz-placeholder {
  color: currentColor;
  opacity: 0.42;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}
.MuiInput-input:-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}
.MuiInput-input::-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}
.MuiInput-input:focus {
  outline: 0;
}
.MuiInput-input:invalid {
  box-shadow: none;
}
.MuiInput-input::-webkit-search-decoration {
  -webkit-appearance: none;
}
.MuiInput-input.MuiInput-disabled {
  opacity: 1;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input::-webkit-input-placeholder {
  opacity: 0;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input::-moz-placeholder {
  opacity: 0;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:-ms-input-placeholder {
  opacity: 0;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input::-ms-input-placeholder {
  opacity: 0;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:focus::-webkit-input-placeholder {
  opacity: 0.42;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:focus::-moz-placeholder {
  opacity: 0.42;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:focus:-ms-input-placeholder {
  opacity: 0.42;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:focus::-ms-input-placeholder {
  opacity: 0.42;
}
.MuiInput-inputMarginDense {
  padding-top: 3px;
}
.MuiInput-inputMultiline {
  resize: none;
  padding: 0;
}
.MuiInput-inputType {
  height: 1.1875em;
}
.MuiInput-inputTypeSearch {
  -moz-appearance: textfield;
  -webkit-appearance: textfield;
}
.MuiFormControl-root {
  margin: 0;
  border: 0;
  display: inline-flex;
  padding: 0;
  position: relative;
  min-width: 0;
  flex-direction: column;
}
.MuiFormControl-marginNormal {
  margin-top: 16px;
  margin-bottom: 8px;
}
.MuiFormControl-marginDense {
  margin-top: 8px;
  margin-bottom: 4px;
}
.MuiFormControl-fullWidth {
  width: 100%;
}
.fcTextArea-readOnly textarea {
  color: rgba(0, 0, 0, 0.87);
}"
`;

exports[`snapshot: className html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth test-class fcTextArea-root"
>
  <div
    className="MuiInput-root MuiInput-fullWidth MuiInput-formControl MuiInput-multiline MuiInput-underline"
  >
    <div
      className="m-root"
      style={
        Object {
          "height": 19,
        }
      }
    >
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows="1"
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows={1}
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-invalid={false}
        aria-required={false}
        className="m-textarea MuiInput-input MuiInput-inputMultiline"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        rows={1}
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`snapshot: only label css 1`] = `
".MuiFormLabel-root {
  color: rgba(0, 0, 0, 0.54);
  padding: 0;
  font-size: 1rem;
  font-family: \\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif;
  line-height: 1;
}
.MuiFormLabel-root.MuiFormLabel-focused {
  color: #303f9f;
}
.MuiFormLabel-root.MuiFormLabel-disabled {
  color: rgba(0, 0, 0, 0.38);
}
.MuiFormLabel-root.MuiFormLabel-error {
  color: #f44336;
}
.MuiFormLabel-asterisk.MuiFormLabel-error {
  color: #f44336;
}
.MuiInputLabel-root {
  transform-origin: top left;
}
.MuiInputLabel-formControl {
  top: 0;
  left: 0;
  position: absolute;
  transform: translate(0, 24px) scale(1);
}
.MuiInputLabel-marginDense {
  transform: translate(0, 21px) scale(1);
}
.MuiInputLabel-shrink {
  transform: translate(0, 1.5px) scale(0.75);
  transform-origin: top left;
}
.MuiInputLabel-animated {
  transition: transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
}"
`;

exports[`snapshot: only label html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcTextArea-root"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
    data-shrink={false}
  >
    textarea
  </label>
  <div
    className="MuiInput-root MuiInput-fullWidth MuiInput-formControl MuiInput-multiline MuiInput-underline"
  >
    <div
      className="m-root"
      style={
        Object {
          "height": 19,
        }
      }
    >
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows="1"
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows={1}
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-invalid={false}
        aria-required={false}
        className="m-textarea MuiInput-input MuiInput-inputMultiline"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        rows={1}
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;

exports[`snapshot: read only css 1`] = `""`;

exports[`snapshot: read only html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcTextArea-root"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
  >
    textarea
  </label>
  <div
    className="MuiInput-root MuiInput-disabled MuiInput-fullWidth MuiInput-formControl MuiInput-multiline MuiInput-underline fcTextArea-readOnly"
  >
    <div
      className="m-root"
      style={
        Object {
          "height": 19,
        }
      }
    >
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows="1"
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows={1}
        tabIndex={-1}
        value="Lorem ipsum"
      />
      <textarea
        aria-invalid={false}
        aria-required={false}
        className="m-textarea MuiInput-input MuiInput-disabled MuiInput-inputMultiline"
        disabled={true}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        rows={1}
        type="text"
        value="Lorem ipsum"
      />
    </div>
  </div>
</div>
`;

exports[`snapshot: with handlers css 1`] = `""`;

exports[`snapshot: with handlers html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcTextArea-root"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
  >
    textarea
  </label>
  <div
    className="MuiInput-root MuiInput-fullWidth MuiInput-formControl MuiInput-multiline MuiInput-underline"
  >
    <div
      className="m-root"
      style={
        Object {
          "height": 19,
        }
      }
    >
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows="1"
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows={1}
        tabIndex={-1}
        value="Lorem ipsum"
      />
      <textarea
        aria-invalid={false}
        aria-required={false}
        className="m-textarea MuiInput-input MuiInput-inputMultiline"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        rows={1}
        type="text"
        value="Lorem ipsum"
      />
    </div>
  </div>
</div>
`;

exports[`snapshot: with long text and rows css 1`] = `""`;

exports[`snapshot: with long text and rows html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcTextArea-root"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
  >
    textarea
  </label>
  <div
    className="MuiInput-root MuiInput-fullWidth MuiInput-formControl MuiInput-multiline MuiInput-underline"
  >
    <textarea
      aria-invalid={false}
      aria-required={false}
      className="MuiInput-input MuiInput-inputMultiline"
      disabled={false}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      rows={2}
      type="text"
      value="\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\""
    />
  </div>
</div>
`;

exports[`snapshot: with long text css 1`] = `""`;

exports[`snapshot: with long text html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcTextArea-root"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
  >
    textarea
  </label>
  <div
    className="MuiInput-root MuiInput-fullWidth MuiInput-formControl MuiInput-multiline MuiInput-underline"
  >
    <div
      className="m-root"
      style={
        Object {
          "height": 19,
        }
      }
    >
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows="1"
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows={1}
        tabIndex={-1}
        value="\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\""
      />
      <textarea
        aria-invalid={false}
        aria-required={false}
        className="m-textarea MuiInput-input MuiInput-inputMultiline"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        rows={1}
        type="text"
        value="\\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\""
      />
    </div>
  </div>
</div>
`;

exports[`snapshot: with text css 1`] = `""`;

exports[`snapshot: with text html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcTextArea-root"
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
  >
    textarea
  </label>
  <div
    className="MuiInput-root MuiInput-fullWidth MuiInput-formControl MuiInput-multiline MuiInput-underline"
  >
    <div
      className="m-root"
      style={
        Object {
          "height": 19,
        }
      }
    >
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows="1"
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows={1}
        tabIndex={-1}
        value="Lorem ipsum"
      />
      <textarea
        aria-invalid={false}
        aria-required={false}
        className="m-textarea MuiInput-input MuiInput-inputMultiline"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        rows={1}
        type="text"
        value="Lorem ipsum"
      />
    </div>
  </div>
</div>
`;

exports[`snapshot: without props css 1`] = `""`;

exports[`snapshot: without props html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcTextArea-root"
>
  <div
    className="MuiInput-root MuiInput-fullWidth MuiInput-formControl MuiInput-multiline MuiInput-underline"
  >
    <div
      className="m-root"
      style={
        Object {
          "height": 19,
        }
      }
    >
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows="1"
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-hidden="true"
        className="m-shadow m-textarea"
        readOnly={true}
        rows={1}
        tabIndex={-1}
        value=""
      />
      <textarea
        aria-invalid={false}
        aria-required={false}
        className="m-textarea MuiInput-input MuiInput-inputMultiline"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        rows={1}
        type="text"
        value=""
      />
    </div>
  </div>
</div>
`;
