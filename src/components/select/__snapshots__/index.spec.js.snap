// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot: className css 1`] = `
".MuiFormLabel-root {
  color: rgba(0, 0, 0, 0.54);
  padding: 0;
  font-size: 1rem;
  font-family: \\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif;
  line-height: 1;
}
.MuiFormLabel-root.MuiFormLabel-focused {
  color: #303f9f;
}
.MuiFormLabel-root.MuiFormLabel-disabled {
  color: rgba(0, 0, 0, 0.38);
}
.MuiFormLabel-root.MuiFormLabel-error {
  color: #f44336;
}
.MuiFormLabel-asterisk.MuiFormLabel-error {
  color: #f44336;
}
.MuiInput-root {
  color: rgba(0, 0, 0, 0.87);
  display: inline-flex;
  position: relative;
  font-size: 1rem;
  font-family: \\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif;
  line-height: 1.1875em;
}
.MuiInput-root.MuiInput-disabled {
  color: rgba(0, 0, 0, 0.38);
}
label + .MuiInput-formControl {
  margin-top: 16px;
}
.MuiInput-underline:after {
  left: 0;
  right: 0;
  bottom: 0;
  height: 2px;
  content: \\"\\";
  position: absolute;
  transform: scaleX(0);
  transition: transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
  pointer-events: none;
  background-color: #303f9f;
}
.MuiInput-underline.MuiInput-focused:after {
  transform: scaleX(1);
}
.MuiInput-underline.MuiInput-error:after {
  transform: scaleX(1);
  background-color: #f44336;
}
.MuiInput-underline:before {
  left: 0;
  right: 0;
  bottom: 0;
  height: 1px;
  content: \\"\\";
  position: absolute;
  transition: background-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  pointer-events: none;
  background-color: rgba(0, 0, 0, 0.42);
}
.MuiInput-underline:hover:not(.MuiInput-disabled):before {
  height: 2px;
  background-color: rgba(0, 0, 0, 0.87);
}
.MuiInput-underline.MuiInput-disabled:before {
  background: transparent;
  background-size: 5px 1px;
  background-image: linear-gradient(to right, rgba(0, 0, 0, 0.42) 33%, transparent 0%);
  background-repeat: repeat-x;
  background-position: left top;
}
.MuiInput-multiline {
  padding: 6px 0 7px;
}
.MuiInput-fullWidth {
  width: 100%;
}
.MuiInput-input {
  font: inherit;
  color: currentColor;
  border: 0;
  margin: 0;
  padding: 6px 0 7px;
  display: block;
  min-width: 0;
  flex-grow: 1;
  box-sizing: content-box;
  background: none;
  vertical-align: middle;
  -webkit-tap-highlight-color: transparent;
}
.MuiInput-input::-webkit-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}
.MuiInput-input::-moz-placeholder {
  color: currentColor;
  opacity: 0.42;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}
.MuiInput-input:-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}
.MuiInput-input::-ms-input-placeholder {
  color: currentColor;
  opacity: 0.42;
  transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}
.MuiInput-input:focus {
  outline: 0;
}
.MuiInput-input:invalid {
  box-shadow: none;
}
.MuiInput-input::-webkit-search-decoration {
  -webkit-appearance: none;
}
.MuiInput-input.MuiInput-disabled {
  opacity: 1;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input::-webkit-input-placeholder {
  opacity: 0;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input::-moz-placeholder {
  opacity: 0;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:-ms-input-placeholder {
  opacity: 0;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input::-ms-input-placeholder {
  opacity: 0;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:focus::-webkit-input-placeholder {
  opacity: 0.42;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:focus::-moz-placeholder {
  opacity: 0.42;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:focus:-ms-input-placeholder {
  opacity: 0.42;
}
label[data-shrink=false] + .MuiInput-formControl .MuiInput-input:focus::-ms-input-placeholder {
  opacity: 0.42;
}
.MuiInput-inputMarginDense {
  padding-top: 3px;
}
.MuiInput-inputMultiline {
  resize: none;
  padding: 0;
}
.MuiInput-inputType {
  height: 1.1875em;
}
.MuiInput-inputTypeSearch {
  -moz-appearance: textfield;
  -webkit-appearance: textfield;
}
.MuiFormControl-root {
  margin: 0;
  border: 0;
  display: inline-flex;
  padding: 0;
  position: relative;
  min-width: 0;
  flex-direction: column;
}
.MuiFormControl-marginNormal {
  margin-top: 16px;
  margin-bottom: 8px;
}
.MuiFormControl-marginDense {
  margin-top: 8px;
  margin-bottom: 4px;
}
.MuiFormControl-fullWidth {
  width: 100%;
}
.MuiModal-root {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  z-index: 1300;
  position: fixed;
}
.MuiModal-hidden {
  visibility: hidden;
}
.MuiPopover-paper {
  position: absolute;
  min-width: 16px;
  max-width: calc(100vw - 32px);
  overflow-y: auto;
  overflow-x: hidden;
  min-height: 16px;
  max-height: calc(100vh - 32px);
}
.MuiPopover-paper:focus {
  outline: none;
}
.MuiMenu-paper {
  max-height: calc(100vh - 96px);
  -webkit-overflow-scrolling: touch;
}
.MuiInputLabel-root {
  transform-origin: top left;
}
.MuiInputLabel-formControl {
  top: 0;
  left: 0;
  position: absolute;
  transform: translate(0, 24px) scale(1);
}
.MuiInputLabel-marginDense {
  transform: translate(0, 21px) scale(1);
}
.MuiInputLabel-shrink {
  transform: translate(0, 1.5px) scale(0.75);
  transform-origin: top left;
}
.MuiInputLabel-animated {
  transition: transform 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;
}
.MuiSvgIcon-root {
  fill: currentColor;
  width: 1em;
  height: 1em;
  display: inline-block;
  font-size: 24px;
  transition: fill 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  user-select: none;
  flex-shrink: 0;
}
.MuiSvgIcon-colorPrimary {
  color: #3f51b5;
}
.MuiSvgIcon-colorSecondary {
  color: #f50057;
}
.MuiSvgIcon-colorAction {
  color: rgba(0, 0, 0, 0.54);
}
.MuiSvgIcon-colorDisabled {
  color: rgba(0, 0, 0, 0.26);
}
.MuiSvgIcon-colorError {
  color: #f44336;
}
.MuiSelect-root {
  width: 100%;
  position: relative;
}
.MuiSelect-select {
  width: calc(100% - 32px);
  cursor: pointer;
  min-width: 16px;
  user-select: none;
  padding-right: 32px;
  -moz-appearance: none;
  -webkit-appearance: none;
}
.MuiSelect-select:focus {
  background: rgba(0, 0, 0, 0.05);
  border-radius: 0;
}
.MuiSelect-select:-moz-focusring {
  color: transparent;
  text-shadow: 0 0 0 #000;
}
.MuiSelect-select::-ms-expand {
  display: none;
}
.MuiSelect-select.MuiSelect-disabled {
  cursor: default;
}
.MuiSelect-selectMenu {
  width: auto;
  overflow: hidden;
  min-height: 1.1875em;
  white-space: nowrap;
  text-overflow: ellipsis;
}
.MuiSelect-icon {
  top: calc(50% - 12px);
  right: 0;
  color: rgba(0, 0, 0, 0.54);
  position: absolute;
  pointer-events: none;
}
.fcSelect-readOnly {
  color: rgba(0, 0, 0, 0.87);
}"
`;

exports[`snapshot: className html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth test-class fcSelect-root"
  onBlur={[Function]}
  onFocus={[Function]}
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
    data-shrink={false}
    htmlFor="_lllllm"
  />
  <div
    className="MuiInput-root MuiInput-formControl MuiInput-underline"
  >
    <div
      className="MuiSelect-root"
    >
      <div
        aria-haspopup="true"
        aria-owns={null}
        aria-pressed="false"
        className="MuiSelect-select MuiSelect-selectMenu MuiInput-input"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        role="button"
        tabIndex={0}
      >
        <span
          dangerouslySetInnerHTML={
            Object {
              "__html": "&#8203",
            }
          }
        />
      </div>
      <input
        aria-invalid={false}
        aria-required={false}
        autoComplete={undefined}
        autoFocus={undefined}
        defaultValue={undefined}
        id="_lllllm"
        name={undefined}
        onKeyDown={undefined}
        onKeyUp={undefined}
        placeholder={undefined}
        readOnly={undefined}
        required={undefined}
        rows={undefined}
        type="hidden"
        value=""
      />
      <svg
        aria-hidden="true"
        className="MuiSvgIcon-root MuiSelect-icon"
        color={undefined}
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7 10l5 5 5-5z"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`snapshot: only label css 1`] = `""`;

exports[`snapshot: only label html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcSelect-root"
  onBlur={[Function]}
  onFocus={[Function]}
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
    data-shrink={false}
    htmlFor="_lllllm"
  >
    select
  </label>
  <div
    className="MuiInput-root MuiInput-formControl MuiInput-underline"
  >
    <div
      className="MuiSelect-root"
    >
      <div
        aria-haspopup="true"
        aria-owns={null}
        aria-pressed="false"
        className="MuiSelect-select MuiSelect-selectMenu MuiInput-input"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        role="button"
        tabIndex={0}
      >
        <span
          dangerouslySetInnerHTML={
            Object {
              "__html": "&#8203",
            }
          }
        />
      </div>
      <input
        aria-invalid={false}
        aria-required={false}
        autoComplete={undefined}
        autoFocus={undefined}
        defaultValue={undefined}
        id="_lllllm"
        name={undefined}
        onKeyDown={undefined}
        onKeyUp={undefined}
        placeholder={undefined}
        readOnly={undefined}
        required={undefined}
        rows={undefined}
        type="hidden"
        value=""
      />
      <svg
        aria-hidden="true"
        className="MuiSvgIcon-root MuiSelect-icon"
        color={undefined}
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7 10l5 5 5-5z"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`snapshot: read only css 1`] = `""`;

exports[`snapshot: read only html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcSelect-root"
  onBlur={[Function]}
  onFocus={[Function]}
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
    htmlFor="_lllllm"
  >
    select
  </label>
  <div
    className="MuiInput-root MuiInput-disabled MuiInput-formControl MuiInput-underline fcSelect-readOnly"
  >
    <div
      className="MuiSelect-root"
    >
      <div
        aria-haspopup="true"
        aria-owns={null}
        aria-pressed="false"
        className="MuiSelect-select MuiSelect-selectMenu MuiSelect-disabled MuiInput-input MuiInput-disabled"
        onBlur={[Function]}
        onClick={null}
        onFocus={[Function]}
        onKeyDown={[Function]}
        role="button"
        tabIndex={null}
      >
        options1
      </div>
      <input
        aria-invalid={false}
        aria-required={false}
        autoComplete={undefined}
        autoFocus={undefined}
        defaultValue={undefined}
        id="_lllllm"
        name={undefined}
        onKeyDown={undefined}
        onKeyUp={undefined}
        placeholder={undefined}
        readOnly={undefined}
        required={undefined}
        rows={undefined}
        type="hidden"
        value={0}
      />
      <svg
        aria-hidden="true"
        className="MuiSvgIcon-root MuiSelect-icon"
        color={undefined}
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7 10l5 5 5-5z"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`snapshot: with handlers css 1`] = `""`;

exports[`snapshot: with handlers html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcSelect-root"
  onBlur={[Function]}
  onFocus={[Function]}
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
    htmlFor="_lllllm"
  >
    select
  </label>
  <div
    className="MuiInput-root MuiInput-formControl MuiInput-underline"
  >
    <div
      className="MuiSelect-root"
    >
      <div
        aria-haspopup="true"
        aria-owns={null}
        aria-pressed="false"
        className="MuiSelect-select MuiSelect-selectMenu MuiInput-input"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        role="button"
        tabIndex={0}
      >
        options1
      </div>
      <input
        aria-invalid={false}
        aria-required={false}
        autoComplete={undefined}
        autoFocus={undefined}
        defaultValue={undefined}
        id="_lllllm"
        name={undefined}
        onKeyDown={undefined}
        onKeyUp={undefined}
        placeholder={undefined}
        readOnly={undefined}
        required={undefined}
        rows={undefined}
        type="hidden"
        value={0}
      />
      <svg
        aria-hidden="true"
        className="MuiSvgIcon-root MuiSelect-icon"
        color={undefined}
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7 10l5 5 5-5z"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`snapshot: with options css 1`] = `""`;

exports[`snapshot: with options html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcSelect-root"
  onBlur={[Function]}
  onFocus={[Function]}
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
    data-shrink={false}
    htmlFor="_lllllm"
  >
    select
  </label>
  <div
    className="MuiInput-root MuiInput-formControl MuiInput-underline"
  >
    <div
      className="MuiSelect-root"
    >
      <div
        aria-haspopup="true"
        aria-owns={null}
        aria-pressed="false"
        className="MuiSelect-select MuiSelect-selectMenu MuiInput-input"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        role="button"
        tabIndex={0}
      >
        <span
          dangerouslySetInnerHTML={
            Object {
              "__html": "&#8203",
            }
          }
        />
      </div>
      <input
        aria-invalid={false}
        aria-required={false}
        autoComplete={undefined}
        autoFocus={undefined}
        defaultValue={undefined}
        id="_lllllm"
        name={undefined}
        onKeyDown={undefined}
        onKeyUp={undefined}
        placeholder={undefined}
        readOnly={undefined}
        required={undefined}
        rows={undefined}
        type="hidden"
        value=""
      />
      <svg
        aria-hidden="true"
        className="MuiSvgIcon-root MuiSelect-icon"
        color={undefined}
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7 10l5 5 5-5z"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`snapshot: with value css 1`] = `""`;

exports[`snapshot: with value html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcSelect-root"
  onBlur={[Function]}
  onFocus={[Function]}
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
    data-shrink={true}
    htmlFor="_lllllm"
  >
    select
  </label>
  <div
    className="MuiInput-root MuiInput-formControl MuiInput-underline"
  >
    <div
      className="MuiSelect-root"
    >
      <div
        aria-haspopup="true"
        aria-owns={null}
        aria-pressed="false"
        className="MuiSelect-select MuiSelect-selectMenu MuiInput-input"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        role="button"
        tabIndex={0}
      >
        options1
      </div>
      <input
        aria-invalid={false}
        aria-required={false}
        autoComplete={undefined}
        autoFocus={undefined}
        defaultValue={undefined}
        id="_lllllm"
        name={undefined}
        onKeyDown={undefined}
        onKeyUp={undefined}
        placeholder={undefined}
        readOnly={undefined}
        required={undefined}
        rows={undefined}
        type="hidden"
        value={0}
      />
      <svg
        aria-hidden="true"
        className="MuiSvgIcon-root MuiSelect-icon"
        color={undefined}
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7 10l5 5 5-5z"
        />
      </svg>
    </div>
  </div>
</div>
`;

exports[`snapshot: without props css 1`] = `""`;

exports[`snapshot: without props html 1`] = `
<div
  className="MuiFormControl-root MuiFormControl-fullWidth fcSelect-root"
  onBlur={[Function]}
  onFocus={[Function]}
>
  <label
    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
    data-shrink={false}
    htmlFor="_lllllm"
  />
  <div
    className="MuiInput-root MuiInput-formControl MuiInput-underline"
  >
    <div
      className="MuiSelect-root"
    >
      <div
        aria-haspopup="true"
        aria-owns={null}
        aria-pressed="false"
        className="MuiSelect-select MuiSelect-selectMenu MuiInput-input"
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        role="button"
        tabIndex={0}
      >
        <span
          dangerouslySetInnerHTML={
            Object {
              "__html": "&#8203",
            }
          }
        />
      </div>
      <input
        aria-invalid={false}
        aria-required={false}
        autoComplete={undefined}
        autoFocus={undefined}
        defaultValue={undefined}
        id="_lllllm"
        name={undefined}
        onKeyDown={undefined}
        onKeyUp={undefined}
        placeholder={undefined}
        readOnly={undefined}
        required={undefined}
        rows={undefined}
        type="hidden"
        value=""
      />
      <svg
        aria-hidden="true"
        className="MuiSvgIcon-root MuiSelect-icon"
        color={undefined}
        focusable="false"
        viewBox="0 0 24 24"
      >
        <path
          d="M7 10l5 5 5-5z"
        />
      </svg>
    </div>
  </div>
</div>
`;
